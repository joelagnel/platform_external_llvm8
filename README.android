The source code of of llvm-8.0.0 was downloaded from
http://releases.llvm.org/8.0.0/llvm-8.0.0.src.tar.xz.

To build llvm-8.0.0 for Android we first need to build llvm-tblgen program for
host. llvm-tblgen is a code genearator used by llvm and clang. It depends on a
small subset of llvm codebase: checked in headers, lib/Support, lib/TableGen and
util/TableGen.

In order to build llvm-8.0.0 for Android, or llvm-tblgen for host using Android
build system we need to provide header files that are generated by cmake when
generating build files. Easiest way to generate them is to invoke cmake. Assume
you have shell variable LLVM_SOURCE_DIR pointing to llvm's source directory.
- Generating header files for llvm-tblgen
  1. Create new directory, referred later to as $HOST_BUILD_DIR
  2. cd $HOST_BUILD_DIR
  3. cmake $LLVM_SOURCE_DIR
  4. Now you should have all generated headers (*.h, *.def) under
     $HOST_BUILD_DIR/include/llvm/Config. Copy them to llvm host directory in
     this repo.
  5. Review macros defined in config.h and disable ones that impose unnecessary
     restrictions on host environment.
- Generating header fies for llvm Android
  1. cd $HOST_BUILD_DIR && make llvm-tblgen
  2. Create new directory, referred later to as $ANDROID_BUILD_DIR
  3. Setup standalone ndk to be used with cmake. Create cmake toolchain file
     which might look as follows:
     ```
     set(CMAKE_SYSTEM_NAME Android)
     set(CMAKE_SYSTEM_VERSION 28)
     set(CMAKE_ANDROID_STANDALONE_TOOLCHAIN <standalone toolchain path>)
     set(CMAKE_ANDROID_ARCH_ABI arm64-v8a)
     ```
     Path of the file will be referred to as TOOLCHAIN_FILE
  4. cmake $LLVM_SOURCE_DIR \
         -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN_FILE \
         -DLLVM_TABLEGEN=$HOST_BUILD_DIR/bin/llvm-tblgen
  5. Now you should have all generated headers (*.h, *.def) under
     $ANDROID_BUILD_DIR/include/llvm/Config. Copy them to llvm device directory
     in this repo.
